{"version":3,"sources":["pages/ChatRoom/ChatRoom.js","components/MessageInput/MessageInput.js","components/Messages/Message/Message.js","components/Messages/Messages.js","components/InfoBar/InfoBar.js","components/Chat/Chat.js","components/Users/Users.js","pages/Login/Login.js","pages/Join/Join.js","App.js","index.js"],"names":["socket","MessageInput","message","sendMessage","setMessage","Form","useForm","form","inputEl","useRef","initialValues","remember","layout","style","width","onFinish","resetFields","current","focus","Item","name","rules","required","marginRight","placeholder","value","ref","onChange","e","target","type","htmlType","Message","isSentByCurrentUser","user","toLowerCase","className","paddingRight","text","paddingLeft","Messages","messages","map","i","InfoBar","users","room","height","color","length","flexGrow","onClick","textField","document","createElement","innerText","body","appendChild","select","execCommand","remove","notification","open","description","cursor","CopyOutlined","fontSize","Chat","props","Users","id","ENDPOINT","ChatRoom","connectionOptions","reconnectionAttempts","timeout","transports","useState","setName","setRoom","setUsers","setMessages","useEffect","queryString","parse","location","search","io","connect","emit","error","alert","on","justify","align","span","console","log","labelCol","wrapperCol","tailLayout","offset","Login","history","useHistory","uniqueNamesGenerator","dictionaries","adjectives","colors","animals","push","label","Join","App","path","exact","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9ee0575e.chunk.js","sourcesContent":["import { React, useEffect, useState } from \"react\";\r\nimport { Card, Row, Col } from \"antd\";\r\nimport Chat from \"../../components/Chat/Chat\";\r\nimport Users from \"../../components/Users/Users\";\r\nimport io from \"socket.io-client\";\r\nimport \"./ChatRoom.css\";\r\n\r\nimport queryString from \"query-string\";\r\n\r\nconst ENDPOINT = \"https://fora-soft-test-termoplan.herokuapp.com/\";\r\n\r\nlet socket;\r\n\r\nconst ChatRoom = (props) => {\r\n  // Socket.io options to prevent cors errors\r\n  const connectionOptions = {\r\n    \"force new connection\": true,\r\n    reconnectionAttempts: \"Infinity\",\r\n    timeout: 10000,\r\n    transports: [\"websocket\"],\r\n  };\r\n  const [name, setName] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [users, setUsers] = useState(\"\");\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  // Connect to socket and set the room and username\r\n  useEffect(() => {\r\n    const { name, room } = queryString.parse(props.location.search);\r\n\r\n    setRoom(room);\r\n    setName(name);\r\n\r\n    socket = io.connect(ENDPOINT, connectionOptions);\r\n\r\n    socket.emit(\"join\", { name, room }, (error) => {\r\n      if (error) {\r\n        alert(error);\r\n      }\r\n    });\r\n  }, [ENDPOINT, props.location.search]);\r\n\r\n  // Get information about the room and users in it. Handle incoming message by putting it in messages Array.\r\n  useEffect(() => {\r\n    socket.on('message', message => {\r\n      setMessages(messages => [ ...messages, message ]);\r\n    });\r\n    \r\n    socket.on(\"roomData\", ({ users }) => {\r\n      setUsers(users);\r\n    });\r\n}, []);\r\n\r\n  const sendMessage = () => {\r\n    if(message) {\r\n      socket.emit('sendMessage', message, () => setMessage(''));\r\n      console.log(message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Row justify=\"center\" align=\"middle\" className=\"roomContainer\">\r\n        <Col span=\"12\">\r\n          <Chat messages={messages} name={name} users={users} sendMessage={sendMessage} setMessage={setMessage} room={room} />\r\n        </Col>\r\n        <Col span=\"12\">\r\n          <Users users={users} />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n","import React, { useRef, useEffect }  from \"react\";\r\nimport { Form, Input, FormItem, Button } from \"antd\";\r\n\r\nconst MessageInput = ({ message, sendMessage, setMessage }) => {\r\n  const [form] = Form.useForm();\r\n  const inputEl = useRef(null)\r\n  const send = () => {\r\n    sendMessage();\r\n    form.resetFields();\r\n    inputEl.current.focus();\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      layout=\"inline\"\r\n      style={{ width: \"80%\" }}\r\n      onFinish={send}\r\n      form={form}\r\n      // onFinishFailed={onFinishFailed}\r\n    >\r\n      <Form.Item\r\n        name=\"message\"\r\n        rules={[\r\n          {\r\n            required: false,\r\n          },\r\n        ]}\r\n        style={{ marginRight: 0, width: \"80%\" }}\r\n      >\r\n        <Input\r\n          placeholder=\"Введите сообщение\"\r\n          value={message}\r\n          ref={inputEl}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          style={{ marginRight: 0 }}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item style={{ width: \"20%\", marginRight: 0 }}>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          style={{ marginRight: 0, width: \"100%\" }}\r\n        >\r\n          Отправить\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default MessageInput;\r\n","import React from 'react';\r\nimport { Card } from 'antd';\r\nimport \"./Message.css\"\r\n\r\nconst Message = ({message, name}) => {\r\n  let isSentByCurrentUser = false;\r\n\r\n  if(message.user.toLowerCase() === name.toLowerCase()) {\r\n    isSentByCurrentUser = true;\r\n  }\r\n\r\n  return(\r\n    isSentByCurrentUser\r\n      ? (\r\n        <div className=\"messageContainer justifyEnd\">\r\n          <span className=\"userName\" style={{paddingRight: 5}}>{message.user}</span> <span className=\"bgBlue\">{message.text}</span>\r\n        </div>\r\n        )\r\n        : (\r\n          <div className=\"messageContainer justifyStart\">\r\n            <span className=\"bgGray\">{message.text}</span><span className=\"userName\" style={{paddingLeft: 5}}>{message.user}</span>\r\n          </div>\r\n        )\r\n  )\r\n}\r\n\r\nexport default Message","import React from 'react';\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\nimport Message from \"./Message/Message\"\r\nimport \"./Messages.css\"\r\n\r\nconst Messages = ({messages, name}) => {\r\n  return(\r\n    <ScrollToBottom className=\"messages\">\r\n      {messages.map((message, i) => <div key={i}> <Message message={message} name={name} /> </div>)}\r\n    </ScrollToBottom>\r\n  )\r\n}\r\n\r\nexport default Messages","import React from 'react';\r\nimport { Badge, notification } from 'antd'\r\nimport { CopyOutlined } from '@ant-design/icons';\r\n\r\nimport \"./infoBar.css\"\r\n\r\nconst InfoBar = ({ users, room }) => {\r\n  const copyToClipboard = (e) => {\r\n    let text=`https://stoic-kare-1f426c.netlify.app/join?room=${room}`\r\n    var textField = document.createElement('textarea')\r\n    textField.innerText = text\r\n    document.body.appendChild(textField)\r\n    textField.select()\r\n    document.execCommand('copy')\r\n    textField.remove()\r\n\r\n    notification.open({\r\n      message: 'Ссылка скопирована ✔',\r\n      description:\r\n        'Скиньте ее другу, чтобы он зашел в чат!😎'\r\n    });\r\n  };\r\n\r\n  return(\r\n    <div className=\"infoBar\" style={{ width: \"80%\", height: 40 }}>\r\n      <Badge color=\"green\" style={{ paddingLeft: 10 }} />Онлайн: {users.length}\r\n      <div style={{flexGrow: 1}} />\r\n      <span onClick={copyToClipboard} style={{color: \"#7b7b7b\", paddingRight: 5, cursor: \"pointer\"}}>Нажмите чтобы скопировать пригласительную ссылку <CopyOutlined style={{fontSize: \"20px\"}} /></span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InfoBar","import React from 'react';\r\nimport { Card, Form, Input, Button } from 'antd'\r\nimport MessageInput from '../MessageInput/MessageInput'\r\nimport Messages from '../Messages/Messages'\r\nimport InfoBar from '../InfoBar/InfoBar'\r\nimport \"./Chat.css\"\r\n\r\nconst Chat = (props) => {\r\n  return(\r\n    <div className=\"chat\">\r\n      <InfoBar users={props.users} room={props.room} />\r\n      <Messages messages={props.messages} name={props.name} />\r\n      <MessageInput sendMessage={props.sendMessage} setMessage={props.setMessage} message={props.message} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chat","import React from 'react';\r\nimport { Badge } from 'antd'\r\n\r\nconst Users = ({users}) => {\r\n  return(\r\n    <div style={{color: 'white'}}>\r\n      <h2 style={{color: 'white'}}>Пользователи онлайн:</h2>\r\n      {users ? (users.map((user, id) =>  <div><Badge color=\"green\" style={{ paddingLeft: 10 }} /> <span>{user.name}</span></div>)) : ''}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users","import React, { useState } from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Login.css\"\r\nimport { uniqueNamesGenerator, adjectives, colors, animals } from 'unique-names-generator';\r\n  \r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 8,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Login = () => {\r\n  const history = useHistory()\r\n  const [name, setName] = useState()\r\n\r\n  const onFinish = () => {\r\n    const room = uniqueNamesGenerator({\r\n      dictionaries: [adjectives, colors, animals]\r\n    });\r\n    history.push(`/room?name=${name}&room=${room}`)\r\n  }\r\n\r\n  return (\r\n    <div className=\"outerContainer\">\r\n      <Form\r\n        className=\"loginForm\"\r\n        {...layout}\r\n        name=\"basic\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n        // onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label={<label style={{ color: \"white\" }}>Никнейм</label>}\r\n          name=\"Никнейм\"\r\n          style={{ color: \"white\" }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Пожалуйста, введите никнейм\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input onChange={e => setName(e.target.value)} />\r\n        </Form.Item>\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Войти\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Join.css\"  \r\n\r\nimport queryString from \"query-string\";\r\n\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 8,\r\n  },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Join = (props) => {\r\n  const history = useHistory()\r\n  const [name, setName] = useState()\r\n\r\n  const { room } = queryString.parse(props.location.search);\r\n\r\n  const onFinish = () => {\r\n    history.push(`/room?name=${name}&room=${room}`)\r\n  }\r\n\r\n  return (\r\n    <div className=\"outerContainer\">\r\n      <Form\r\n        className=\"loginForm\"\r\n        {...layout}\r\n        name=\"basic\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n        // onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label={<label style={{ color: \"white\" }}>Никнейм</label>}\r\n          name=\"Никнейм\"\r\n          style={{ color: \"white\" }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Пожалуйста, введите никнейм\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input onChange={e => setName(e.target.value)} />\r\n        </Form.Item>\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Войти\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Join;\r\n","import React from \"react\"\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport ChatRoom from \"./pages/ChatRoom/ChatRoom\"\nimport Login from \"./pages/Login/Login\"\nimport Join from \"./pages/Join/Join\"\n\nconst App = () => {\n  return(\n    <Router>\n      <Route path=\"/\" exact component={Login} />\n      <Route path=\"/join\" component={Join} />\n      <Route path=\"/room\" component={ChatRoom} />\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}